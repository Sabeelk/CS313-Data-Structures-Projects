***Original code, before making changes***

Average runtime in seconds (random arrays): ___.02211s_______
Average runtime in seconds (already-sorted arrays): ____slow______
Average runtime in seconds (all-zero arrays): _____slow_____

(++numComparisons should be uncommented at this point)

Average number of comparisons (random arrays): ___2022255_______
n = 100000
nlogn = ___1660964_______
Compared to nlogn, the number of comparisons is ____slightly more______ (much more? slightly more? slightly less?)

(++numComparisons should be commented-out at this point)


***Modify quicksort to use insertion sort for small subarrays***

Threshold = 8
Average runtime in seconds (random arrays): ____0.0305______

Threshold = 32
Average runtime in seconds (random arrays): ____0.02677______

Threshold = 64
Average runtime in seconds (random arrays): ___0.02659_______

Threshold = 512
Average runtime in seconds (random arrays): ____0.03336______

The best threshold(s) seems to be ___64_______ 

(the threshold should be set to what you think is the best choice)


***Modify partition to choose a random pivot***

Average runtime in seconds (random arrays): ____0.02876______
Average runtime in seconds (already-sorted arrays): ___ 0.01107_______
Average runtime in seconds (all-zero arrays): ____slow______